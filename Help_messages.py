from tkinter import messagebox as mb


def about_tree_ration():
    text = """Список кормов рациона формируется с помощью таблиц в вкладках "Корма" и "Минералы". 
    
    Для редактирование строки используйте двойной клик левой кнопки мыши.
    
    Для удаления строки укажите количество 0"""
    mb.showinfo("Справка", text)


def about_tree_feeds():

    text = """Таблица содержит справочник кормов.
    С помощью двойного клика левой кнопки мыши в столбцах "Название" и "Группа" можно добавить корм в рацион.
    Список собранного рациона можно увидеть на вкладке /Расчеты/.
    
    С помощью двойного клика левой кнопки мыши в столбце "Цена" можно отредактировать цену корма.
    
    В справочник кормов можно добавлять или удалять корма с помощью кнопок справа (в демо режиме недоступны)."""
    mb.showinfo("Справка", text)


def about_tree_parameters():

    text = """В таблице собраны параметры каждого корма.
    Выбор корма в левой таблице меняет показатели в таблице показателей (справа).
    
    Для редактирования показателей необходимо воспользоваться кнопкой <Редактировать>. В Демо режиме недоступна!
    
    Цену можно изменить путем двойного клика по нужной строке в столбце "Цена"
    
    После этого в открывшейся таблице для изменения значения выбранного параметра следует дважды
    кликнуть левой кнопкой мыши по строке"""
    mb.showinfo("Справка", text)


def about_tree_minerals():
    text = """Таблица содержит справочник минеральных веществ.
    
    С помощью двойного клика левой кнопки мыши можно добавить минерал в рацион.
    
    Список собранного рациона можно увидеть на вкладке "Расчеты".
    
    С помощью кнопок можно редактировать справочник минеральных веществ.
    """
    mb.showinfo("Справка", text)


def instruction() -> str:
    txt = """ПОРЯДОК РАБОТЫ:
    
    1. Заполнить исходные данные на этой вкладке

    2. Составить рацион путем добавления кормов и минеральных веществ на страницах вкладок "Корма" и "Минералы"

    3. Проверить результаты на странице "Расчеты" в "Таблице питательных веществ"

    4. При необходимости отредактировать собранный рацион путем изменения количества сырья в таблице "Состав рациона" (двойной клик мышкой по строке сырья).

    5. Сохранить созданный рацион или экспортировать его в Excel файл (см. меню "Файл" и вкладку /Расчеты/)
    
    ВНИМАНИЕ! В Демо режиме функции, указанные в п.п. 4 и 5, недоступны."""
    return txt


def about_tree_result():
    text = """Таблица формируется на основании расчета.
    
    1. Колонка "Необх." заполняется на основе исходных данных.
     
     2. Колонка "Факт." формируется путем обработки созданного рациона на основе питательности кормов и минералов.
     
     """
    mb.showinfo("Справка", text)


def about_tree_green():
    text = """Строки окрашиваются в различный цвет в зависимости от состава рациона:
     
     ЗЕЛЁНЫЙ - фактическое значение показателя больше необходимого и меньше максимального"""
    mb.showinfo("Справка", text)


def about_tree_yellow():
    text = """Строки окрашиваются в различный цвет в зависимости от состава рациона:
     
     ЖЁЛТЫЙ - фактическое значение показателя больше минимального и меньше необходимого"""
    mb.showinfo("Справка", text)


def about_tree_red():
    text = """Строки окрашиваются в различный цвет в зависимости от состава рациона:
     
     КРАСНЫЙ - фактическое значение показателя больше максимального"""
    mb.showinfo("Справка", text)